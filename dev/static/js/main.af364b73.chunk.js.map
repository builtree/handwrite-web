{"version":3,"sources":["assets/logo.svg","Navbar.js","config.js","Home.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","Navbar","react_default","a","createElement","className","href","target","rel","API","Home","props","_useState","useState","_useState2","Object","slicedToArray","image","setImage","_useState3","_useState4","font","setFont","_useState5","_useState6","currentState","setCurrentState","error","useRef","_useDropzone","useDropzone","accept","noClick","noKeyboard","maxFiles","onDrop","acceptedFiles","console","log","allowedTypes","message","size","includes","type","split","join","alert","validateImage","URL","createObjectURL","getRootProps","getInputProps","open","sleep","ms","Promise","resolve","setTimeout","loading","style","display","0","1","2","3","4","5","6","color","current","onSubmit","e","event","preventDefault","response","status","formData","FormData","researchOption","document","getElementById","checked","append","path","font_url","stat","fetch","method","body","then","r","json","_ref","asyncToGenerator","regenerator_default","mark","_callee","data","response_code","i","status_response","wrap","_context","prev","next","sent","abrupt","stop","_x","apply","this","arguments","blob","sendImage","Grid","container","direction","justify","alignItems","assign","src","alt","onClick","CloudUploadOutlined","IconButton","aria-label","disabled","HighlightOffOutlined","Button","variant","id","defaultChecked","htmlFor","download","Boolean","HowToUse","align","About","Handwrite","logo","src_Navbar","src_Home","App_About","App_HowToUse","ReactDOM","render","StrictMode","App"],"mappings":"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","file":"static/js/main.af364b73.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.54b0d79c.svg\";","import React from \"react\";\n\nconst Navbar = () => {\n    return (\n        <div className=\"navbar-background\">\n            <div className=\"flexbox-container\">\n                <div>\n                    <a href=\"#home\">\n                        ‎<button className=\"home\">Home</button>\n                    </a>\n                </div>\n                <div>\n                    <a href=\"#about\">\n                        <button>‏‏‎About‎‏‏‎‎</button>\n                    </a>\n                </div>\n                <div>\n                    <a href=\"#howtouse\">\n                        <button>How To Use?</button>\n                    </a>\n                </div>\n                <div>\n                    <a\n                        href=\"https://builtree.github.io/handwrite\"\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                    >\n                        <button>Documentation</button>\n                    </a>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Navbar;\n","var API_URL;\nif(process.env.REACT_APP_STAGE === 'development') {\n    API_URL = 'https://handwritetest.herokuapp.com'\n}\n  \nelse if(process.env.REACT_APP_STAGE === 'production') {\n    API_URL = 'https://handwrite-server.herokuapp.com'\n}\n\nelse {\n    API_URL = 'http://localhost:8000'\n}\n\nexport const API = API_URL;","import React, { useState, useRef } from 'react';\nimport { API } from './config.js'\nimport { useDropzone } from 'react-dropzone';\nimport { CloudUploadOutlined } from '@material-ui/icons';\nimport Grid from '@material-ui/core/Grid';\nimport { Button } from '@material-ui/core';\nimport IconButton from '@material-ui/core/IconButton';\nimport { HighlightOffOutlined } from '@material-ui/icons';\n\nfunction Home(props) {\n  const [image, setImage] = useState([\"\", null]);\n  const [font, setFont] = useState(\"\");\n  const [currentState, setCurrentState] = useState(0);\n  var state = {\n    0: \"Not doing anything\",\n    1: \"Image uploaded.\",\n    2: \"Sending image...\",\n    3: \"Generating your font...\",\n    4: \"Fetching your font...\",\n    5: \"Fetched!\",\n    6: \"Error\"\n  }\n\n  var error = useRef(\"\");\n\n  function validateImage(image) {\n    var allowedTypes = ['jpeg', 'jpg', 'png'];\n    var message = '';\n    if (image.size / 1024 / 1024 > 2) {\n      message += 'File size exceeds 2 MiB! ';\n    }\n    if (!allowedTypes.includes(image.type.split(\"/\")[1])) {\n      message += 'File type not supported! Allowed file extensions - ' + allowedTypes.join(\", \");\n    }\n    if (message){\n      alert(message);\n      return false;\n    }\n    return true;\n  }\n\n  const {\n    getRootProps,\n    getInputProps,\n    open\n  } = useDropzone({\n    accept: 'image/*',\n    noClick: true,\n    noKeyboard: true,\n    maxFiles: 1,\n    onDrop: acceptedFiles => {\n      console.log(acceptedFiles[0]);\n      if(acceptedFiles[0] && validateImage(acceptedFiles[0])) {\n        setImage([URL.createObjectURL(acceptedFiles[0]), acceptedFiles[0]]);\n        setCurrentState(1);\n      }\n    }\n  });\n\n  const removeFile = () => {\n    setImage([\"\", null]);\n    setCurrentState(0);\n  }\n\n  function sleep(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n  }\n\n  function sendImage(event) {\n    event.preventDefault();\n    if (!image[1]) {\n      return\n    }\n    let formData = new FormData();\n    var researchOption = document.getElementById(\"researchOption\").checked;\n    formData.append(\"image\", image[1]);\n    formData.append(\"research\", researchOption);\n    var response;\n    var status;\n    var stat = -1;\n    var path;\n    var font_url;\n    setCurrentState(2);\n    fetch(\n      API + \"/handwrite/input\",\n      {\n        method: 'POST',\n        body: formData\n      }\n    ).then((r) => r.json()).then(async (data) => {\n      const response_code = data.response_code\n      const message = data.message\n      error.current = message;\n      if (response_code === 1) {\n        setCurrentState(6);\n        console.log(message)\n      }\n      else if (response_code === 2) {\n        setCurrentState(6);\n        console.log(message)\n      }\n      else if (response_code === 3) {\n        setCurrentState(6);\n        console.log(message)\n      }\n      else if (response_code === 0) {\n        setCurrentState(3);\n        path = data.path;\n        for (let i = 0; i < 10; i++) {\n          response = await fetch(API + \"/handwrite/status/\" + path);\n          status = await response.json();\n          const status_response = status.status;\n          console.log(status_response);\n          if (status_response === 0) {\n            console.log(\"Font file ready!\");\n            stat = 0;\n            setCurrentState(4);\n          }\n          else if (status_response === 1) {\n            console.log(\"Still Processing!\");\n            stat = -1;\n          }\n          else if (status_response === 2) {\n            console.log(\"Unable to Process!\");\n            stat = 2;\n            error.current = \"Unable to Process!\";\n            setCurrentState(6);\n          }\n          else if (status_response === 3) {\n            console.log(\"Not Found!\");\n            stat = 3;\n            error.current = \"Not Found!\";\n            setCurrentState(6);\n          }\n          await sleep(5000);\n          if (stat !== -1) {\n            break;\n          }\n        }\n      }\n    }).then(() => {\n      if (stat === 0) {\n        fetch(\n          API + \"/handwrite/fetch/\" + path,\n          {\n            method: 'POST'\n          }\n        ).then((r) => r.blob()).then(data => {\n          console.log(data);\n          font_url = URL.createObjectURL(data);\n          console.log(font_url);\n          setFont(font_url);\n          setCurrentState(5);\n        });\n      }\n    });\n  }\n\n  function loading() {\n    return [2, 3, 4].includes(currentState);\n  }\n\n  return (\n    <div>\n      <div className=\"loader\" style={{ display: loading() ? \"\" : \"none\" }}>\n        {state[currentState]}\n        <div className=\"spinner\"></div>\n      </div>\n      <div className=\"loader\" style={{ display: currentState === 6 ? \"\" : \"none\" }}>\n        <font color = \"red\"> {error.current} </font>\n      </div>\n      <div className=\"grid\">\n        <form onSubmit={(e) => sendImage(e)}>\n          <Grid container direction=\"row\" justify=\"space-around\" alignItems=\"center\">\n            <div><br />\n              <div {...getRootProps({className: 'dropzone'})} className=\"image-container\"> <input {...getInputProps()} />\n                {image[0] ?\n                  <div className=\"input-image\">\n                    <img src={image[0]} alt=\"Selected Form\" />\n                  </div> :\n                  <div>\n                    <h3>Drag 'n' drop your handwritten sample</h3>\n                    <h2>OR</h2>\n                    <center><button type=\"button\" onClick={open}><CloudUploadOutlined />\n                      ‎ ‎ ‎Choose file\n                    </button></center>\n                  </div>\n                }\n              </div>\n              {image[1] ?\n                <center><h6>{image[1].path}<IconButton aria-label=\"delete\" color=\"secondary\" size=\"small\" onClick={removeFile} disabled={loading()}>\n                  <HighlightOffOutlined />\n                </IconButton></h6></center> : \"\"}\n            </div>\n            <div className=\"submit-button\">\n              <Button variant=\"outlined\" href=\"https://github.com/builtree/handwrite/raw/dev/handwrite_sample.pdf\">Download Sample Form</Button><br /><br />\n              <Button type=\"submit\" variant=\"outlined\" disabled={loading() || currentState === 0}>\n                CREATE FONT\n              </Button>\n              <br /><br />\n              <div className=\"form-check\">\n                <input className=\"form-check-input\" type=\"checkbox\" id=\"researchOption\" defaultChecked></input>\n                <label className=\"form-check-label\" htmlFor=\"flexCheckChecked\">\n                  Opt-in for research use.\n                </label>\n              </div>\n              <br /><br />\n              <Button variant=\"outlined\" href={font} download=\"font.ttf\" style={{ display: Boolean(font) ? \"\" : \"none\" }}>Download your font</Button>\n            </div>\n          </Grid>\n        </form>\n      </div>\n    </div>\n  );\n}\n\nexport default Home;","import logo from './assets/logo.svg';\nimport React from 'react';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport Grid from '@material-ui/core/Grid';\nimport Navbar from './Navbar';\nimport Home from './Home.js';\n\nconst HowToUse = () => {\n  return (\n    <div className=\"subsection\" id=\"howtouse\">\n      <h1>How To Use?</h1>\n      <br /> <br />\n      <Grid container direction=\"row\" justify=\"space-around\" alignItems=\"center\">\n        <div align='left'>\n          <h2>Creating your Handwritten Sample</h2>\n          <br />\n          <ol type=\"1\">\n            <li> Take a printout of the <a href='https://github.com/builtree/handwrite/raw/dev/handwrite_sample.pdf'>sample form</a>.</li> <br />\n            <li> Fill the form using the reference image.</li> <br />\n            <li> Scan the filled form using a scanner, or any scanning application on your phone.</li> <br />\n            <li> Save the scan in JPEG format.</li> <br />\n          </ol>\n          <br /> <br />\n          <h2>Creating your font</h2>\n          <br />\n          <ol type=\"1\">\n            <li>Upload the scanned JPEG image <a href='#home'>above</a>.</li> <br />\n            <li>Fill the form with the desired font details and click the CREATE FONT button.</li> <br />\n            <li>Wait for a few seconds and download your TTF font. (If an error occurs try again with a new scan)</li> <br />\n            <li>Install the font in your system!</li> <br />\n          </ol>\n        </div>\n        <div>\n          Your form should look like this:\n          <br /> <br />\n          <img src=\"https://raw.githubusercontent.com/builtree/assets/handwrite/handwrite_filled_form.jpg\" className='image-container' alt=\"Filled Form Example\"></img>\n        </div>\n      </Grid>\n        <br /> <br />\n        Here's the end result!\n        <br /> <br />\n        <img src=\"https://raw.githubusercontent.com/builtree/assets/handwrite/handwrite_sentence.png\" alt=\"Output Example\"></img>\n      </div>\n  );\n}\n\nconst About = () => {\n  return (\n    <div className=\"subsection\" id=\"about\">\n      <h1>About</h1>\n      <br />\n      <div>\n        Ever had those long-winded assignments, that the teacher always wants handwritten? Is your written work messy because you think faster than you write? <br /><br /> <i>Wish there was a font for your handwriting?</i> <br /><br /> Handwrite helps you do exactly that! Refer to the <a href=\"#howtouse\">How to Use</a> section for more details.\n      </div>\n      <br /><br />\n      <h2>Why did we build this?</h2>\n      <div><br />Handwriting stuff is a struggle, it’s tiring, time consuming and inconsistent but still is a requirement for so many assignments, tests etc. We, as developers, love to type on our keyboard far more than writing and it’s practical, isn’t it? \n      So we decided to build something that can help us type out our writing. Being experienced in Python and wanting to learn Image Processing, this was the perfect project, so we got started!\n      </div>\n      <br /><br />\n      <h2>Want to Contribute?</h2>\n      <div><br />We &#9829; open-source! <br /> We look forward to your contributions! Don’t shy away if you are a beginner, we are happy to help you get started. <br /><br />\n      <div className=\"about-list\"><ul>\n      The following repositories help handwrite work: <br/><br/>\n        <li><a href=\"https://github.com/builtree/handwrite\">Handwrite:</a> Core Handwrite project build with Python. It also features a CLI interface for handwrite. (Python) <br/> You can get started with how core handwrite works <a href=\"https://builtree.github.io/handwrite/\">here.</a></li><br />\n        <li><a href=\"https://github.com/builtree/handwrite-web\">Handwrite Web:</a> Frontend of handwrite web. (React)</li><br />\n        <li><a href=\"https://github.com/builtree/handwrite-server\">Handwrite Server:</a> Backend for handwrite, hosted on heroku. (Python, Flask)</li><br />\n      </ul>\n      </div>\n      </div>\n    </div>\n  );\n}\n\n\nfunction Handwrite() {\n  return (\n    <div className=\"handwrite\" id=\"home\">\n      <img src={logo} alt=\"handwrite logo\" className=\"Handwrite-Logo\" />\n      <Navbar />\n      <Home />\n      <br/>\n      <About />\n      <hr className=\"divider\"/>\n      <br />\n      <HowToUse />\n      <div className=\"bottom-container\">\n      </div>\n    </div>\n  );\n}\n\nexport default Handwrite;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}